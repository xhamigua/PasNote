const
  // libavcodec
  LIBAVCODEC_VERSION_MAJOR = 55;
  LIBAVCODEC_VERSION_MINOR = 39;
  LIBAVCODEC_VERSION_MICRO = 101;
  LIBAVCODEC_VERSION       = '55.39.101';
  LIBAVCODEC_VERSION_INT   = (LIBAVCODEC_VERSION_MAJOR shl 16) or
                             (LIBAVCODEC_VERSION_MINOR shl 8) or
                              LIBAVCODEC_VERSION_MICRO;
  LIBAVCODEC_BUILD         = LIBAVCODEC_VERSION_INT;
  LIBAVCODEC_IDENT         = 'Lavc' + LIBAVCODEC_VERSION;

(**
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *)
{$IFNDEF FF_API_REQUEST_CHANNELS}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_REQUEST_CHANNELS}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_ALLOC_CONTEXT}
  {$IF LIBAVCODEC_VERSION_MAJOR < 55}
    {$DEFINE FF_API_ALLOC_CONTEXT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVCODEC_OPEN}
  {$IF LIBAVCODEC_VERSION_MAJOR < 55}
    {$DEFINE FF_API_AVCODEC_OPEN}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_DECODE_AUDIO}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_OLD_DECODE_AUDIO}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_TIMECODE}
  {$IF LIBAVCODEC_VERSION_MAJOR < 55}
    {$DEFINE FF_API_OLD_TIMECODE}
  {$IFEND}
{$ENDIF}

{$IFNDEF FF_API_OLD_ENCODE_AUDIO}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_OLD_ENCODE_AUDIO}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_ENCODE_VIDEO}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_OLD_ENCODE_VIDEO}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_CODEC_ID}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_CODEC_ID}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVCODEC_RESAMPLE}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_AVCODEC_RESAMPLE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_DEINTERLACE}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_DEINTERLACE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_DESTRUCT_PACKET}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_DESTRUCT_PACKET}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_GET_BUFFER}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_GET_BUFFER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_MISSING_SAMPLE}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_MISSING_SAMPLE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_LOWRES}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_LOWRES}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_CAP_VDPAU}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_CAP_VDPAU}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_BUFS_VDPAU}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_BUFS_VDPAU}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_VOXWARE}
  {$IF LIBAVCODEC_VERSION_MAJOR < 56}
    {$DEFINE FF_API_VOXWARE}
  {$IFEND}
{$ENDIF}

  // libavdevice
  LIBAVDEVICE_VERSION_MAJOR = 55;
  LIBAVDEVICE_VERSION_MINOR = 5;
  LIBAVDEVICE_VERSION_MICRO = 100;
  LIBAVDEVICE_VERSION       = '55.5.100';
  LIBAVDEVICE_VERSION_INT   = (LIBAVDEVICE_VERSION_MAJOR shl 16) or
                              (LIBAVDEVICE_VERSION_MINOR shl 8) or
                               LIBAVDEVICE_VERSION_MICRO;
  LIBAVDEVICE_BUILD         = LIBAVDEVICE_VERSION_INT;
  LIBAVDEVICE_IDENT         = 'Lavc' + LIBAVDEVICE_VERSION;

(**
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *)

  // libavfilter
  LIBAVFILTER_VERSION_MAJOR  = 3;
  LIBAVFILTER_VERSION_MINOR  = 90;
  LIBAVFILTER_VERSION_MICRO  = 100;
  LIBAVFILTER_VERSION        = '3.90.100';
  LIBAVFILTER_VERSION_INT    = (LIBAVFILTER_VERSION_MAJOR shl 16) or
                               (LIBAVFILTER_VERSION_MINOR shl 8) or
                                LIBAVFILTER_VERSION_MICRO;
  LIBAVFILTER_BUILD          = LIBAVFILTER_VERSION_INT;
  LIBAVFILTER_IDENT          = 'Lavfi' + LIBAVFILTER_VERSION;

(**
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *)

{$IFNDEF FF_API_AVFILTERPAD_PUBLIC}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_AVFILTERPAD_PUBLIC}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_FOO_COUNT}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_FOO_COUNT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_FILL_FRAME}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_FILL_FRAME}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_BUFFERSRC_BUFFER}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_BUFFERSRC_BUFFER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVFILTERBUFFER}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_AVFILTERBUFFER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_FILTER_OPTS}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_OLD_FILTER_OPTS}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_ACONVERT_FILTER}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_ACONVERT_FILTER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVFILTER_OPEN}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_AVFILTER_OPEN}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVFILTER_INIT_FILTER}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_AVFILTER_INIT_FILTER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_FILTER_REGISTER}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_OLD_FILTER_REGISTER}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_GRAPH_PARSE}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_OLD_GRAPH_PARSE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_DRAWTEXT_OLD_TIMELINE}
  {$IF LIBAVFILTER_VERSION_MAJOR < 4}
    {$DEFINE FF_API_DRAWTEXT_OLD_TIMELINE}
  {$IFEND}
{$ENDIF}

  // libavformat
  LIBAVFORMAT_VERSION_MAJOR = 55;
  LIBAVFORMAT_VERSION_MINOR = 19;
  LIBAVFORMAT_VERSION_MICRO = 104;
  LIBAVFORMAT_VERSION       = '55.19.104';
  LIBAVFORMAT_VERSION_INT   = (LIBAVFORMAT_VERSION_MAJOR shl 16) or
                              (LIBAVFORMAT_VERSION_MINOR shl 8) or
                               LIBAVFORMAT_VERSION_MICRO;
  LIBAVFORMAT_BUILD         = LIBAVFORMAT_VERSION_INT;
  LIBAVFORMAT_IDENT         = 'Lavf' + LIBAVFORMAT_VERSION;

(**
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *)

{$IFNDEF FF_API_ALLOC_OUTPUT_CONTEXT}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_ALLOC_OUTPUT_CONTEXT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_FORMAT_PARAMETERS}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_FORMAT_PARAMETERS}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_NEW_STREAM}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_NEW_STREAM}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_SET_PTS_INFO}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_SET_PTS_INFO}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_CLOSE_INPUT_FILE}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_CLOSE_INPUT_FILE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_READ_PACKET}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_READ_PACKET}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_ASS_SSA}
  {$IF LIBAVFORMAT_VERSION_MAJOR < 56}
    {$DEFINE FF_API_ASS_SSA}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_R_FRAME_RATE}
  {$DEFINE FF_API_R_FRAME_RATE}
{$ENDIF}

  // libavutil
  LIBAVUTIL_VERSION_MAJOR = 52;
  LIBAVUTIL_VERSION_MINOR = 48;
  LIBAVUTIL_VERSION_MICRO = 101;
  LIBAVUTIL_VERSION       = '52.48.101';
  LIBAVUTIL_VERSION_INT   = (LIBAVUTIL_VERSION_MAJOR shl 16) or
                            (LIBAVUTIL_VERSION_MINOR shl 8) or
                             LIBAVUTIL_VERSION_MICRO;
  LIBAVUTIL_BUILD         = LIBAVUTIL_VERSION_INT;
  LIBAVUTIL_IDENT         = 'Lavu' + LIBAVUTIL_VERSION;

(**
 * @defgroup depr_guards Deprecation guards
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *
 * @{
 *)

{$IFNDEF FF_API_GET_BITS_PER_SAMPLE_FMT}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_GET_BITS_PER_SAMPLE_FMT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_FIND_OPT}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_FIND_OPT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_OLD_AVOPTIONS}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_OLD_AVOPTIONS}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_PIX_FMT}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_PIX_FMT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_CONTEXT_SIZE}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_CONTEXT_SIZE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_PIX_FMT_DESC}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_PIX_FMT_DESC}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AV_REVERSE}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_AV_REVERSE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AUDIOCONVERT}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_AUDIOCONVERT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_CPU_FLAG_MMX2}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_CPU_FLAG_MMX2}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_SAMPLES_UTILS_RETURN_ZERO}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_SAMPLES_UTILS_RETURN_ZERO}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_LLS_PRIVATE}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_LLS_PRIVATE}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_LLS1}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_LLS1}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_AVFRAME_LAVC}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_AVFRAME_LAVC}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_VDPAU}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_VDPAU}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_GET_CHANNEL_LAYOUT_COMPAT}
  {$IF LIBAVUTIL_VERSION_MAJOR < 53}
    {$DEFINE FF_API_GET_CHANNEL_LAYOUT_COMPAT}
  {$IFEND}
{$ENDIF}

(**
 * @}
 *)

  // libswresample
  LIBSWRESAMPLE_VERSION_MAJOR = 0;
  LIBSWRESAMPLE_VERSION_MINOR = 17;
  LIBSWRESAMPLE_VERSION_MICRO = 104;
  LIBSWRESAMPLE_VERSION       = '0.17.104';
  LIBSWRESAMPLE_VERSION_INT   = (LIBSWRESAMPLE_VERSION_MAJOR shl 16) or
                                (LIBSWRESAMPLE_VERSION_MINOR shl 8) or
                                 LIBSWRESAMPLE_VERSION_MICRO;
  LIBSWRESAMPLE_BUILD         = LIBSWRESAMPLE_VERSION_INT;
  LIBSWRESAMPLE_IDENT         = 'SwS' + LIBSWRESAMPLE_VERSION;

  // libswscale
  LIBSWSCALE_VERSION_MAJOR = 2;
  LIBSWSCALE_VERSION_MINOR = 5;
  LIBSWSCALE_VERSION_MICRO = 101;
  LIBSWSCALE_VERSION       = '2.5.101';
  LIBSWSCALE_VERSION_INT   = (LIBSWSCALE_VERSION_MAJOR shl 16) or
                             (LIBSWSCALE_VERSION_MINOR shl 8) or
                              LIBSWSCALE_VERSION_MICRO;
  LIBSWSCALE_BUILD         = LIBSWSCALE_VERSION_INT;
  LIBSWSCALE_IDENT         = 'SwS' + LIBSWSCALE_VERSION;

(**
 * FF_API_* defines may be placed below to indicate public API that will be
 * dropped at a future version bump. The defines themselves are not part of
 * the public API and may change, break or disappear at any time.
 *)

{$IFNDEF FF_API_SWS_GETCONTEXT}
  {$IF LIBSWSCALE_VERSION_MAJOR < 3}
    {$DEFINE FF_API_SWS_GETCONTEXT}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_SWS_CPU_CAPS}
  {$IF LIBSWSCALE_VERSION_MAJOR < 3}
    {$DEFINE FF_API_SWS_CPU_CAPS}
  {$IFEND}
{$ENDIF}
{$IFNDEF FF_API_SWS_FORMAT_NAME}
  {$IF LIBSWSCALE_VERSION_MAJOR < 3}
    {$DEFINE FF_API_SWS_FORMAT_NAME}
  {$IFEND}
{$ENDIF}

